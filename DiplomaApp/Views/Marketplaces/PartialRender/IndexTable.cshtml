@model X.PagedList.PagedList<DiplomaApp.ViewModels.MarketplaceViewModel>
@using X.PagedList.Mvc.Core;
@{
        var query = Context.Request.Query;
        var currentName = query["name"].ToString() == "" ? ViewData["Name"] : query["name"];
}

<div>
    <form>
        <input type="text" class="form-control" id="name" name="name" value="@currentName" placeholder="Марктеплейс">
        <input class="form-control mt-3" type="submit" value="Найти" />
    </form>
    <div class="mt-3">
        <b>@Model.LastItemOnPage из @Model.TotalItemCount</b>
        @Html.PagedListPager(Model, page => (Url.Action(ViewContext.RouteData.Values["action"].ToString(), 
        new {
            id=ViewContext.RouteData.Values["id"],
            page=page})),
        new X.PagedList.Web.Common.PagedListRenderOptions {
            DisplayLinkToLastPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
            LinkToLastPageFormat = "{0}",
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
     </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Маркетплейс
                </th>
                <th>
                    URL
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a asp-controller="Marketplaces" asp-action="Details" asp-route-id="@item.Id">@item.Name</a>
                        </td>
                        <td>
                            <a href=@item.Url>@Html.DisplayFor(modelItem => item.Url)</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <b>@Model.LastItemOnPage из @Model.TotalItemCount</b>
     @Html.PagedListPager(Model, page => (Url.Action(ViewContext.RouteData.Values["action"].ToString(), 
     new {
        id=ViewContext.RouteData.Values["id"],
        page=page})),
        new X.PagedList.Web.Common.PagedListRenderOptions {
            DisplayLinkToLastPage = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded,
            LinkToLastPageFormat = "{0}",
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
 </div>
<script>
    $(document).ready(function () {
        $('.date').each(function () {
            try {
                var text = $(this).html();
                var offset = moment().utcOffset();
                var serverDate = moment.utc(text).utcOffset(offset).format("DD.MM.YYYY HH:mm:ss");
                $(this).html(serverDate);
            }
            catch (ex) {
                console.warn("Error converting date time", ex);
            }
        });
            });
</script>
