@model X.PagedList.PagedList<DiplomaApp.ViewModels.CategoryIndex>
@using X.PagedList.Mvc.Core;
@{
        var query = Context.Request.Query;
        var currentMarketplace = query["marketplace"].ToString() == "" ? ViewData["Marketplace"] : query["marketplace"];
        var currentName = query["name"].ToString() == "" ? ViewData["Name"] : query["name"];
}
<div class="mt-3 mb-3">
    <form>
        <input type="text" class="form-control mt-3" id="name" name="name" value="@currentName" placeholder="Название">
        <input type="text" class="form-control mt-3" id="marketplace" name="marketplace" value="@currentMarketplace" placeholder="Маркетплейс">
        <select class="form-control mt-3" name="order" >
            <option disabled selected>Сортировка</option>
            <option value="name-asc">Название возростание</option>
            <option value="name-desc">Название убывание</option>
            <option value="checkdate-asc">Дата проверки возростание</option>
            <option value="checkdate-desc">Дата проверки убывание</option>
        </select>
        <input class="form-control mt-3" type="submit" value="Найти" />
    </form>
    <div class="mt-3">
        @Html.PagedListPager(Model, page => (Url.Action(ViewContext.RouteData.Values["action"].ToString(), 
        new {
            id=ViewContext.RouteData.Values["id"],
            page=page})),
        new X.PagedList.Web.Common.PagedListRenderOptions {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Название
                </th>
                <th>
                    URL
                </th>
                <th>
                    Маркетплейс
                </th>
                <th>
                    Дата проверки
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a asp-controller="Categories" asp-action="Details" asp-route-id="@item.Category.Id">@Html.DisplayFor(modelItem => item.Category.Name)</a>
                        </td>
                        <td>
                            <a href=@item.Category.Url>@Html.DisplayFor(modelItem => item.Category.Url)</a>
                        </td>
                        <td>
                            <a href=@item.MarketplaceUrl>@Html.DisplayFor(modelItem => item.MarketplaceName)</a>
                        </td>
                        <td>
                            <div class="date">@item.Category.CheckDate.ToString("yyyy-MM-dd HH:mm:ss")</div>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.js"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
        $(document).ready(function () {
            $('.date').each(function () {
                try {
                    var text = $(this).html();
                    var offset = moment().utcOffset();
                    var serverDate = moment.utc(text).utcOffset(offset).format("DD.MM.YYYY HH:mm:ss"); 

                    $(this).html(serverDate);
                }
                catch (ex) {
                    console.warn("Error converting date time", ex);
                }
            });
        });
</script>